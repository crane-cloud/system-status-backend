{
  "swagger": "2.0",
  "info": {
    "title": "Cranecloud status backend API",
    "description": "Backend API for Cranecloud application status",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "paths": {
    "/api/v1/statuses": {
      "get": {
        "tags": ["status"],
        "summary": "Get system status",
        "description": "Get cranecloud service statuses",
        "operationId": "getStatuses",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successfully retrieved System statuses"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/api/v1/statuses/series": {
      "post": {
        "tags": ["status"],
        "summary": "Get and save current status",
        "description": "Save current service statuses",
        "operationId": "postStatusesSeries",
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Successfully saved System statuses"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "get": {
        "tags": ["status"],
        "summary": "Get system status series",
        "description": "Get service statuses series",
        "parameters": [
          {
            "name": "series",
            "in": "query",
            "type": "boolean",
            "description": "if set to true returns series data"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "description": "The type of status"
          }
        ],
        "operationId": "getStatusesSeries",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successfully retrieved System statuses"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/api/v1/clusters": {
      "get": {
        "tags": ["clusters"],
        "summary": "Gets all Clusters",
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Successfully gets Clusters"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["clusters"],
        "summary": "Add a new cluster",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Cluster params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully added new cluster"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}": {
      "get": {
        "tags": ["clusters"],
        "summary": "Gets a single cluster",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "cluster_id",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully gets a single Cluster"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": ["clusters"],
        "summary": "Updates cluster info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "cluster_id",
            "required": true
          },
          {
            "in": "body",
            "name": "cluster params",
            "required": false,
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully updates existing Cluster"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "cluster": {
      "type": "object",
      "required": ["name", "host", "token", "description"],
      "properties": {
        "name": {
          "type": "string",
          "example": "cluster product"
        },
        "host": {
          "type": "string",
          "example": "cluster host url"
        },
        "token": {
          "type": "string",
          "example": "cluster token"
        },
        "description": {
          "type": "string",
          "example": "cluster description"
        },
        "prometheus_url": {
          "type": "string",
          "example": "cluster prometheus url"
        },
        "cost_modal_url": {
          "type": "string",
          "example": "cluster cost modal url"
        }
      }
    }
  }
}
